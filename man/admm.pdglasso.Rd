% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/estimation-functions.R
\name{admm.pdglasso}
\alias{admm.pdglasso}
\title{ADMM graphical lasso algorithm for coloured GGMs for paired data.}
\usage{
admm.pdglasso(
  S,
  lambda1 = 1,
  lambda2 = 1e-04,
  type = c("vertex", "inside.block.edge", "across.block.edge"),
  force.symm = NULL,
  X.init = NULL,
  rho1 = 1,
  rho2 = 1,
  varying.rho1 = TRUE,
  varying.rho2 = TRUE,
  max_iter = 1000,
  eps.abs = 1e-12,
  eps.rel = 1e-12,
  verbose = FALSE,
  print.type = TRUE
)
}
\arguments{
\item{S}{a \eqn{p \times p} covariance (or correlation) matrix.}

\item{lambda1}{a non-negative scalar (or vector) penalty that encourages
sparsity in the concentration matrix. If a vector is provided, it should
match the appropriate length, i.e.}

\item{lambda2}{a non-negative scalar (or vector) penalty that encourages
equality constraints in the concentration matrix. If a vector is provided,
it should match the appropriate length, i.e.}

\item{type, force.symm}{two subvectors of \code{c("vertex", "inside.block.edge", "across.block.edge")} which
identify the pdRCON (sub)model of interest; see \code{\link{pdglasso}} for details.}

\item{X.init}{(optional) A \eqn{p \times p} initial guess for the
concentration matrix and/or starting solution for the ADMM algorithm.}

\item{rho1}{a scalar; tuning parameter of the ADMM algorithm to be used for
the outer loop. It must be strictly positive.}

\item{rho2}{a scalar; tuning parameter of the ADMM algorithm to be used for
the inner loop. It must be strictly positive.}

\item{varying.rho1}{a logical; if \code{TRUE} the parameter rho1 is updated
iteratively to speed-up convergence.}

\item{varying.rho2}{a logical; if \code{TRUE} the parameter rho2 is updated
iteratively to speed-up convergence.}

\item{max_iter}{an integer; maximum number of iterations to be run in case
the algorithm does not converge.}

\item{eps.abs}{a scalar; the absolute precision required for the computation
of primal and dual residuals of the ADMM algorithm.}

\item{eps.rel}{a scalar; the relative precision required for the computation
of primal and dual residuals of the ADMM algorithm.}

\item{verbose}{a logical; if \code{TRUE} the progress (and internal
convergence of inner loop) is shown in the console while the algorithm is
running.}

\item{print.type}{a logical; if \code{TRUE} the acronym used for the model -
which penalties - is returned as printed output in the console.}
}
\value{
A list containing the following components:
\itemize{
\item \code{X}, the estimated concentration matrix
under the pdglasso model; the model is identified by the values of lambda1
and lambda 2, together with the type of penalization imposed.
\item \code{acronyms}, a vector of strings for the type of penalties and forced symmetries imposed
when calling the function.
\item \code{internal.par}, a list of internal parameters
passed to the function at the call, as well as convergence information.
}
}
\description{
By providing a covariance matrix \code{S} and values for \code{lambda1} and \code{lambda2}, this
function estimates a concentration matrix X under the coloured graphical
model for paired data, using the (adaptive) ADMM algorithm. The output is the
matrix and a list of internal parameters used by the function, together with
the specific call in terms of symmetries and penalties required by the user.
}
\examples{

S <- cov(toy_data$sample.data)
admm.pdglasso(S)
}
